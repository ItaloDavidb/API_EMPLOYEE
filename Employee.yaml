openapi: 3.0.1
info:
  title: API Dona Maria
  description: API De Employees e Products.
  version: 1.0.0
externalDocs:
  description: Documentação
  url: https://github.com/ItaloDavidb/API_EMPLOYEE
servers:
- url: http://localhost:3000/api/v1
  description: Api Employees
paths:
  /employee:
    get:
      summary: Retorna todos os Funcionarios.
      parameters:
      - name: name
        in: query
        schema:
          type: string
        required: false
      - name: office
        in: query
        schema:
          type: string
        required: false
      responses:
        200:
          description: sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  employee:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        cpf:
                          type: string
                        office: 
                          type: string
                        birthday:
                          type: string
                        situation:
                          type: string
                        employee_id: 
                          type: string
        404:
          description: Funcionario não encontrado
          content:
            application/json: 
              example: "not found"
    post: 
      summary: Cria um novo Funcionario.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                cpf:
                  type: string
                office:
                  type: string
                birthday:
                  type: string
      responses: 
        201:
          description: Sucesso
          content:
            application/json:
              schema:
                type: object
                properties: 
                  name:
                    type: string
                  cpf:
                    type: string
                  office: 
                    type: string
                  birthday:
                    type: string
                  situation:
                    type: string
                  employee_id: 
                    type: string
                  createdAt:
                    type: string
                  updatedAt:
                    type: string
        400:
          description: Error
          content:
            application/json: 
              example: "não foi possivel cadastrar um novo usuario"
  /employee/{employee_id}:
    put:
      summary: Atualiza um Funcionario.
      parameters:
      - name: employee_id
        in: path
        schema:
          type: string
        required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                cpf:
                  type: string
                office:
                  type: string
                birthday:
                  type: string
                situation: 
                  type: string
      responses: 
        200:
          description: Atualizado com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  cpf:
                    type: string
                  office: 
                    type: string
                  birthday:
                    type: string
                  situation:
                    type: string
                  employee_id: 
                    type: string
                  createdAt:
                    type: string
                  updatedAt:
                    type: string
        404:
          description: Funcionario não encontrado
          content:
            application/json: 
              example: "não foi possivel cadastrar o funcionário"
        400:
          description: Body Error
          content:
            application/json:
              example: "Body error"
    delete:
      summary: Atualiza um Funcionario.
      parameters:
      - name: employee_id
        in: path
        schema:
          type: string
        required: true
      responses: 
        204:
          description: Excluido com sucesso
        404:
          description: Funcionario não encontrado
          content:
            application/json: 
              example: "não foi possivel cadastrar o funcionário"
        400:
          description: Body Error
          content:
            application/json:
              example: "Body error"
  /product:
    post:
      summary: Cria um novo Produto.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                category:
                  type: string
                price:
                  type: number
                employee_id:
                  type: string
      responses: 
        201:
          description: Sucesso
          content:
            application/json:
              schema:
                type: object
                properties: 
                  product_id:
                    type: string
                  name:
                    type: string
                  category:
                    type: string
                  price:
                    type: number
                  employee_id:
                    type: string
        400:
          description: Error
          content:
            application/json: 
              example: "não foi possivel cadastrar um novo Produto"
    get:
      summary: Retorna todos os Produtos.
      parameters:
      - name: name
        in: query
        schema:
          type: string
        required: false
      - name: employee_id
        in: query
        schema:
          type: string
        required: false
      - name: category
        in: query
        schema:
          type: string
        required: false
      - name: min_price
        in: query
        schema:
          type: number
        required: false
      - name: max_price
        in: query
        schema:
          type: number
        required: false
      responses:
        200:
          description: sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        product_id:
                          type: string
                        category: 
                          type: string
                        price:
                          type: number
                        employee_id:
                          type: string
        404:
          description: Produto não encontrado
          content:
            application/json: 
              example: "not found"
          
      
            
                  